[{"D:\\poker-main\\src\\index.js":"1","D:\\poker-main\\src\\App.js":"2","D:\\poker-main\\src\\Components\\Login\\index.js":"3","D:\\poker-main\\src\\Components\\Login\\styles.js":"4","D:\\poker-main\\src\\Components\\Mesas\\index.js":"5","D:\\poker-main\\src\\Components\\Mesas\\styles.js":"6","D:\\poker-main\\src\\Components\\Formulario\\index.js":"7","D:\\poker-main\\src\\Components\\Formulario\\styles.js":"8"},{"size":219,"mtime":1611676754000,"results":"9","hashOfConfig":"10"},{"size":301,"mtime":1611676754000,"results":"11","hashOfConfig":"10"},{"size":540,"mtime":1613683442000,"results":"12","hashOfConfig":"10"},{"size":451,"mtime":1611676754000,"results":"13","hashOfConfig":"10"},{"size":1912,"mtime":1613683452000,"results":"14","hashOfConfig":"10"},{"size":327,"mtime":1611676754000,"results":"15","hashOfConfig":"10"},{"size":5994,"mtime":1613683388000,"results":"16","hashOfConfig":"10"},{"size":465,"mtime":1611961540000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uqj3q4",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\poker-main\\src\\index.js",[],"D:\\poker-main\\src\\App.js",[],"D:\\poker-main\\src\\Components\\Login\\index.js",["37"],"import React from 'react'\nimport Logo from '../../../src/Images/logoini.svg'\nimport * as S from './styles'\nimport Table from '../Mesas'\n\nexport const Login = (props) => {\n    \n    const {setScreen} = props\n\n    return (\n        <S.Div>\n            <div>\n                <img src={Logo} />\n                <p>Login:</p>\n                <input></input>\n                <input type=\"password\"></input>\n                <button onClick={()=>setScreen(()=>Table)}>Logar</button>\n            </div>\n        </S.Div>\n    )\n}\n\nexport default Login;\n","D:\\poker-main\\src\\Components\\Login\\styles.js",[],"D:\\poker-main\\src\\Components\\Mesas\\index.js",["38","39","40","41","42","43","44","45","46","47","48","49"],"import React from 'react'\nimport Mesa from '../../Images/Roleta.svg'\nimport * as S from './styles'\nimport Form from '../Formulario'\n\nconst Table = (props) => {\n    const {setScreen}=props;\n    return (\n        <S.Div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 01</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 02</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 03</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 04</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 05</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 06</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 07</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 08</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 09</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 10</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 11</p>\n            </div>\n            <div>\n                <img onClick={()=>setScreen(()=>Form)} src={Mesa} />\n                <p>Mesa 12</p>\n            </div>\n        </S.Div>\n    )\n}\n\nexport default Table;\n\n\n","D:\\poker-main\\src\\Components\\Mesas\\styles.js",[],"D:\\poker-main\\src\\Components\\Formulario\\index.js",["50","51","52"],"import React, { useState } from 'react'\nimport * as S from './styles'\n\nfunction Form(props) {\n\n    const [tenThousand, setTenThousand] = useState(null)\n    const [fiveThousand, setFiveThousand] = useState(null)\n    const [oneThousand, setOneThousand] = useState(null)\n    const [fiveHund, setFiveHund] = useState(null)\n    const [oneHund, setOneHund] = useState(null)\n    const [twentyFive, setTwentyFive] = useState(null)\n    const [five, setFive] = useState(null)\n    const [valorFinal, setValorFinal] = useState(0)\n    const [diferenca, setDiferenca] = useState(-0)\n\n    const [selectCrupie, setCrupie] = useState(null)\n    const [selectJogos, setJogos] = useState(null)\n    var [vlMesa, setVlMesa] = useState(200000)\n    \n    function novaHora() {\n        function pad(s) {\n            return (s < 10) ? '0' + s : s;\n        }\n        var date = new Date();\n        return [date.getHours(), date.getMinutes()].map(pad).join(':');\n    }\n    function goBack() {\n        window.history.back()\n    }   \n    \n\n    const somaValor = ()=>{\n        let dezMil     = 0 \n        let cincoMil   = 0 \n        let mil        = 0 \n        let quinhentos = 0 \n        let cem        = 0 \n        let vinteCinco = 0 \n        let cinco      = 0 \n\n        if (tenThousand != null) {\n            dezMil = parseInt(tenThousand) * 10000; \n        }\n\n        if (fiveThousand != null) {\n            cincoMil = parseInt(fiveThousand) * 5000;\n        }\n\n        if (oneThousand != null) {\n            mil = parseInt(oneThousand) * 1000; \n        }\n\n        if (fiveHund != null) {\n            quinhentos = parseInt(fiveHund) * 500; \n        }\n\n        if (oneHund != null) {\n            cem = parseInt(oneHund) * 100; \n        }\n\n        if (twentyFive != null) {\n            vinteCinco = parseInt(twentyFive) * 25;\n        }\n \n        if (five != null) {\n            cinco = parseInt(five) * 5; \n        }\n\n        let totalFichas = (dezMil + cincoMil + mil + quinhentos + cem + vinteCinco + cinco)\n\n        setDiferenca(Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(totalFichas))\n        \n        let vlMesaInt = 0\n        vlMesaInt = vlMesa.replace(/([^\\d])+/gim, '');\n\n        if (vlMesaInt != null && vlMesaInt != '') {\n            totalFichas += parseInt(vlMesaInt)      \n        }\n\n        setValorFinal(Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(totalFichas))\n\n        setVlMesa(Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(vlMesaInt))\n    }\n\n    const limpaCampos = () => {\n        setVlMesa('')   \n    }\n\n    return (\n        <>     \n         \n        {\n            /* aqui vc vai colocar os selects da forma que quiser\n\n                Value do select crupie é o ID do crupie salvo na tabela de crupie\n                Value do select jogos é o ID dos jogos salvo na tabela de jogos\n            */\n        }\n            <S.Div>\n                <div>\n                    <div>\n                        <label>Crupiê &nbsp;</label>\n                    </div>\n                    <br/>\n                    <div>\n                        <select value={selectCrupie} onChange={(e)=>setCrupie(e.target.value)}>\n                          <option value=\"1\">José</option>\n                          <option value=\"2\">Marcos</option>\n                          <option value=\"3\">Carlos</option>\n                        </select>\n                    </div>\n                </div>\n                <br />\n                <div>\n                    <div>\n                        <label>Jogos &nbsp;</label>\n                    </div>\n                    <br/>\n                    <div>\n                        <select value={selectJogos} onChange={(e)=>setJogos(e.target.value)}>\n                          <option value=\"1\">Blackjack</option>\n                          <option value=\"2\">Roleta</option>\n                          <option value=\"3\">Truco</option>\n                        </select>\n                    </div>\n                </div>\n                <br />\n                <div>\n                    <p>Valor Mesa</p>\n                    <input value={vlMesa}  onFocus={limpaCampos} onChange={(e)=>setVlMesa(e.target.value)} min='0' type='text'></input>\n                </div>\n                <br />\n                <div>\n                    <p>R$ 10.000</p>\n                    <input value={tenThousand} onChange={(e)=>setTenThousand(e.target.value)} min='0' type='number'></input>\n                </div>\n                <div>\n                <p>R$ 5.000</p>\n                    <input value={fiveThousand} onChange={(e)=>setFiveThousand(e.target.value)} min='0' type='number'></input>\n                </div>\n                <div>\n                <p>R$ 1.000</p>\n                    <input value={oneThousand} onChange={(e)=>setOneThousand(e.target.value)} min='0' type='number'></input>\n                </div>\n                <div>\n                <p>R$ 500</p>\n                    <input value={fiveHund} onChange={(e)=>setFiveHund(e.target.value)} min='0' type='number'></input>\n                </div>\n                <div>\n                <p>R$ 100</p>\n                    <input value={oneHund} onChange={(e)=>setOneHund(e.target.value)} min='0' type='number'></input>\n                </div>\n                <div>\n                <p>R$ 25</p>\n                    <input value={twentyFive} onChange={(e)=>setTwentyFive(e.target.value)} min='0' type='number'></input>\n                </div>\n                <div>\n                <p>R$ 5</p>\n                    <input value={five} onChange={(e)=>setFive(e.target.value)} min='0' type='number'></input>\n                </div>\n                <br/>\n                <br/>\n                <p>Diferença: {diferenca}</p>\n                <p>Valor Final: {valorFinal}</p>\n                <button onClick={somaValor}>Salvar</button>\n                <button onclick=\"goBack()\">Voltar</button>\n                \n            </S.Div>\n\n        </>\n    )\n}\n\nexport default Form\n","D:\\poker-main\\src\\Components\\Formulario\\styles.js",[],{"ruleId":"53","severity":1,"message":"54","line":13,"column":17,"nodeType":"55","endLine":13,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":11,"column":17,"nodeType":"55","endLine":11,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":15,"column":17,"nodeType":"55","endLine":15,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":19,"column":17,"nodeType":"55","endLine":19,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":23,"column":17,"nodeType":"55","endLine":23,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":27,"column":17,"nodeType":"55","endLine":27,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":31,"column":17,"nodeType":"55","endLine":31,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":35,"column":17,"nodeType":"55","endLine":35,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":39,"column":17,"nodeType":"55","endLine":39,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":43,"column":17,"nodeType":"55","endLine":43,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":47,"column":17,"nodeType":"55","endLine":47,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":51,"column":17,"nodeType":"55","endLine":51,"endColumn":69},{"ruleId":"53","severity":1,"message":"54","line":55,"column":17,"nodeType":"55","endLine":55,"endColumn":69},{"ruleId":"56","severity":1,"message":"57","line":20,"column":14,"nodeType":"58","messageId":"59","endLine":20,"endColumn":22},{"ruleId":"56","severity":1,"message":"60","line":27,"column":14,"nodeType":"58","messageId":"59","endLine":27,"endColumn":20},{"ruleId":"61","severity":1,"message":"62","line":76,"column":44,"nodeType":"63","messageId":"64","endLine":76,"endColumn":46},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'novaHora' is defined but never used.","Identifier","unusedVar","'goBack' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]